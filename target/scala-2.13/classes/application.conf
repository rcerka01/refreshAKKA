akka {
  loglevel = INFO
}

specConfig {
  top {
    specValue = 13
  }
}

# for time asertation specConfig
specialTimed {
    akka.test.single-expect-default = 0.3s
}

#intercepting log messages in test
interceptingLogMessages {
    akka {
        loggers = ["akka.testkit.TestEventListener"]
        test {
          filter-leeway = 5s
        }
    }
}

#routers demo
routersDemo {
    akka {
        actor.deployment {
            /poolMaster2 {
                router = round-robin-pool
                nr-of-instances = 5
            }

            /groupMaster2 {
                router = round-robin-group
                routees.paths = ["/user/slave_1","/user/slave_2","/user/slave_3","/user/slave_4","/user/slave_5"]
            }
        }
    }
}

# Dispatchers
my-dispatcher {
    type = Dispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
        fixed-pool-size = 3
    }
    # messages per actor (pool size)
    throughput = 30
}

dispatchersDemo {
    akka.actor.deployment {
        /rayactor {
            dispatcher = my-dispatcher
        }
    }
}

# mailboxesDemo
mailboxesDemo {
    support-ticket-dispatcher {
        mailbox-type = "lectures.part6.Mailboxes$SupportTicketPriorityMailbox"
    }
    control-mailbox {
        mailbox-type = "akka.dispatch.UnboundedControlAwareMailbox"
    }
    akka.actor.deployment {
        /altControleActor {
            mailbox = control-mailbox
        }
    }


}